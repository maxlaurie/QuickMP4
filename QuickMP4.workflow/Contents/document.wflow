<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>492</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>-- QuickMP4 - v1.2 --- Max Laurie 25/07/22-- Converts videos to a ~10mbps H264 with 2 channel audio.-- Requires ffmpeg and ffprobe installed to /usr/local/bin/-- 1.2 changelog-- 1.1 was actually broken, there was no downmixing, the transcode was discarding any audio tracks after track 2-- Added user choice to have the output contain 2 channels of audio, same as source or no channels of audio (video only)on run {input, parameters}		-- requirement check	set requirements to {"ffmpeg", "ffprobe"}	set notinstalledList to requirementsCheck(requirements)	if length of notinstalledList is greater than 0 then		display dialog "The following are required and not installed: " &amp; return &amp; return &amp; notinstalledList as text with title "QuickMP4" buttons {"Close"} with icon stop		return	end if		set userchoice to display dialog "Number of audio channels in output file" with title "QuickMP4" buttons {"Two", "Same as source", "None"}		set ffprobe to "/usr/local/bin/ffprobe "	set ffmpeg to "/usr/local/bin/ffmpeg -y -i "		-- create empty list for tracking files worked on	set filesConverted to {}		repeat with inputfile in input		try			-- set filepath, dirname, basename, output name and get no of audio tracks for input file			set inputfile to POSIX path of inputfile			set filepath to do shell script "dirname " &amp; quoted form of inputfile			set basename to do shell script "basename " &amp; quoted form of inputfile			set extension to do shell script "echo " &amp; quoted form of inputfile &amp; " | awk -F . '{print $NF}'"			if extension is not equal to "mov" then				display dialog "This tool can only be used on mov files." &amp; return &amp; return &amp; "Sorry." with title "QuickMP4" buttons {"That's ok"} with icon stop			end if			set fileandext to splitText(basename, ".")			set outputbasename to item 1 of fileandext &amp; ".mp4"			set output to filepath &amp; "/" &amp; outputbasename						if button returned of userchoice is "Two" then				ffmpegCommand2Channel(ffprobe, ffmpeg, inputfile, output)			else if button returned of userchoice is "Same as source" then				ffmpegCommandAsInput(ffmpeg, inputfile, output)			else if button returned of userchoice is "None" then				ffmpegCommandNoAudio(ffmpeg, inputfile, output)			end if						set end of filesConverted to outputbasename &amp; return		on error			display dialog "Error occured with file: " &amp; return &amp; return &amp; basename with title "QuickMP4" buttons {"Ok"} with icon stop		end try			end repeat		if (length of filesConverted = 0) then		error number -128	else if (length of filesConverted = 1) then		set conversiontext to "Conversion complete!"	else		set conversiontext to "Conversions complete!"	end if		display dialog conversiontext &amp; return &amp; return &amp; filesConverted as text with title "QuickMP4" buttons {"Thanks"}	end runon requirementsCheck(requirements)	set notinstalledList to {}	repeat with requirement in requirements		if (do shell script "test -f /usr/local/bin/" &amp; requirement &amp; " || echo 'notinstalled'") is "notinstalled" then			set end of notinstalledList to (requirement as text) &amp; return		end if	end repeat	return notinstalledListend requirementsCheckon splitText(theText, theDelimiter)	set AppleScript's text item delimiters to theDelimiter	set theTextItems to every text item of theText	set AppleScript's text item delimiters to ""	return theTextItemsend splitTexton ffmpegCommand2Channel(ffprobe, ffmpeg, inputfile, output)	set noOfAudioTracks to do shell script ffprobe &amp; "-v error -select_streams a -show_entries stream=index -of csv=p=0 " &amp; quoted form of inputfile &amp; " | wc -w | sed 's/^ *//g'"	do shell script ffmpeg &amp; quoted form of inputfile &amp; " -filter_complex '[0:a]amerge=inputs=" &amp; noOfAudioTracks &amp; "[a]' -ac 2 -map 0:v -map '[a]' -vcodec libx264 -crf 15 -vf format=yuv420p -acodec aac -b:a 256k " &amp; quoted form of outputend ffmpegCommand2Channelon ffmpegCommandAsInput(ffmpeg, inputfile, output)	do shell script ffmpeg &amp; quoted form of inputfile &amp; " -vcodec libx264 -crf 15 -vf format=yuv420p -acodec aac -b:a 256k -map 0:v -map 0:a " &amp; quoted form of outputend ffmpegCommandAsInputon ffmpegCommandNoAudio(ffmpeg, inputfile, output)	do shell script ffmpeg &amp; quoted form of inputfile &amp; " -vcodec libx264 -crf 15 -vf format=yuv420p -an -map 0:v " &amp; quoted form of outputend ffmpegCommandNoAudio</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>CD57700C-2324-4F78-A8F7-EA085BE5561F</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>F3DF6402-B4E5-4507-8F18-8D605AD36E2E</string>
				<key>UUID</key>
				<string>BE32690C-6822-4EBE-B9EC-D544FD0482FB</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>559.500000:368.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>applicationBundleID</key>
		<string>com.apple.finder</string>
		<key>applicationBundleIDsByPath</key>
		<dict>
			<key>/System/Library/CoreServices/Finder.app</key>
			<string>com.apple.finder</string>
		</dict>
		<key>applicationPath</key>
		<string>/System/Library/CoreServices/Finder.app</string>
		<key>applicationPaths</key>
		<array>
			<string>/System/Library/CoreServices/Finder.app</string>
		</array>
		<key>inputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject.movie</string>
		<key>outputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>presentationMode</key>
		<integer>15</integer>
		<key>processesInput</key>
		<integer>0</integer>
		<key>serviceApplicationBundleID</key>
		<string>com.apple.finder</string>
		<key>serviceApplicationPath</key>
		<string>/System/Library/CoreServices/Finder.app</string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject.movie</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>systemImageName</key>
		<string>NSTouchBarCommunicationVideo</string>
		<key>useAutomaticInputType</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
